"""Initial migration

Revision ID: bb604b3e11a8
Revises: 
Create Date: 2025-03-10 12:48:22.431893

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'bb604b3e11a8'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('vendors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('vendor_id', sa.String(length=20), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('contact_email', sa.String(length=120), nullable=False),
    sa.Column('contact_phone', sa.String(length=20), nullable=False),
    sa.Column('specialization', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('contact_email'),
    sa.UniqueConstraint('vendor_id')
    )
    op.create_table('drones',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('drone_id', sa.String(length=20), nullable=False),
    sa.Column('vendor_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('manufacturer', sa.String(length=100), nullable=False),
    sa.Column('model', sa.String(length=100), nullable=False),
    sa.Column('serial_number', sa.String(length=100), nullable=False),
    sa.Column('manufacture_date', sa.Date(), nullable=False),
    sa.Column('drone_type', sa.String(length=50), nullable=False),
    sa.Column('lift_system', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendors.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('drone_id'),
    sa.UniqueConstraint('serial_number')
    )
    op.create_table('cargo_capabilities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('drone_id', sa.Integer(), nullable=False),
    sa.Column('max_payload_kg', sa.Float(), nullable=False),
    sa.Column('cargo_volume_m3', sa.Float(), nullable=False),
    sa.Column('lift_mechanism', sa.String(length=100), nullable=False),
    sa.Column('cargo_securing_method', sa.String(length=100), nullable=False),
    sa.Column('load_distribution', sa.String(length=100), nullable=False),
    sa.Column('ground_clearance_cm', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['drone_id'], ['drones.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('drone_id')
    )
    op.create_table('equipment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('drone_id', sa.Integer(), nullable=False),
    sa.Column('motor_type', sa.String(length=50), nullable=False),
    sa.Column('number_of_motors', sa.Integer(), nullable=False),
    sa.Column('motor_power_kw', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['drone_id'], ['drones.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('drone_id')
    )
    op.create_table('maintenance',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('drone_id', sa.Integer(), nullable=False),
    sa.Column('last_maintenance_date', sa.Date(), nullable=False),
    sa.Column('flight_hours', sa.Float(), nullable=False),
    sa.Column('load_cycles', sa.Integer(), nullable=False),
    sa.Column('frame_inspection_date', sa.Date(), nullable=False),
    sa.Column('warranty_expiry', sa.Date(), nullable=False),
    sa.Column('maintenance_schedule', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['drone_id'], ['drones.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('drone_id')
    )
    op.create_table('regulatory_info',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('drone_id', sa.Integer(), nullable=False),
    sa.Column('registration_number', sa.String(length=100), nullable=False),
    sa.Column('certification_type', sa.String(length=50), nullable=False),
    sa.Column('special_airworthiness_cert', sa.Boolean(), nullable=True),
    sa.Column('registration_expiry', sa.Date(), nullable=False),
    sa.Column('operation_type', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['drone_id'], ['drones.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('drone_id'),
    sa.UniqueConstraint('registration_number')
    )
    op.create_table('technical_specs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('drone_id', sa.Integer(), nullable=False),
    sa.Column('empty_weight_kg', sa.Float(), nullable=False),
    sa.Column('length_cm', sa.Float(), nullable=False),
    sa.Column('width_cm', sa.Float(), nullable=False),
    sa.Column('height_cm', sa.Float(), nullable=False),
    sa.Column('max_takeoff_weight_kg', sa.Float(), nullable=False),
    sa.Column('max_speed_loaded_kph', sa.Float(), nullable=False),
    sa.Column('max_flight_time_loaded_minutes', sa.Integer(), nullable=False),
    sa.Column('operational_range_loaded_km', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['drone_id'], ['drones.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('drone_id')
    )
    op.create_table('approved_cargo_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cargo_capabilities_id', sa.Integer(), nullable=False),
    sa.Column('cargo_type', sa.String(length=100), nullable=False),
    sa.ForeignKeyConstraint(['cargo_capabilities_id'], ['cargo_capabilities.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('approved_jurisdictions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('regulatory_info_id', sa.Integer(), nullable=False),
    sa.Column('jurisdiction', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['regulatory_info_id'], ['regulatory_info.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('motor_hours',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('maintenance_id', sa.Integer(), nullable=False),
    sa.Column('motor_identifier', sa.String(length=50), nullable=False),
    sa.Column('hours', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['maintenance_id'], ['maintenance.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('redundancy_features',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('equipment_id', sa.Integer(), nullable=False),
    sa.Column('feature', sa.String(length=100), nullable=False),
    sa.ForeignKeyConstraint(['equipment_id'], ['equipment.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('safety_features',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('equipment_id', sa.Integer(), nullable=False),
    sa.Column('feature', sa.String(length=100), nullable=False),
    sa.ForeignKeyConstraint(['equipment_id'], ['equipment.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sensors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('equipment_id', sa.Integer(), nullable=False),
    sa.Column('sensor_type', sa.String(length=100), nullable=False),
    sa.ForeignKeyConstraint(['equipment_id'], ['equipment.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('sensors')
    op.drop_table('safety_features')
    op.drop_table('redundancy_features')
    op.drop_table('motor_hours')
    op.drop_table('approved_jurisdictions')
    op.drop_table('approved_cargo_types')
    op.drop_table('technical_specs')
    op.drop_table('regulatory_info')
    op.drop_table('maintenance')
    op.drop_table('equipment')
    op.drop_table('cargo_capabilities')
    op.drop_table('drones')
    op.drop_table('vendors')
    # ### end Alembic commands ###
